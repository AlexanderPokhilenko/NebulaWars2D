//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LobbyUiContext {

    public LobbyUiEntity matchLoadingTableEnabledEntity { get { return GetGroup(LobbyUiMatcher.MatchLoadingTableEnabled).GetSingleEntity(); } }

    public bool isMatchLoadingTableEnabled {
        get { return matchLoadingTableEnabledEntity != null; }
        set {
            var entity = matchLoadingTableEnabledEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isMatchLoadingTableEnabled = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LobbyUiEntity {

    static readonly Code.Scenes.LobbyScene.ECS.Components.MatchLoadingTableEnabledComponent matchLoadingTableEnabledComponent = new Code.Scenes.LobbyScene.ECS.Components.MatchLoadingTableEnabledComponent();

    public bool isMatchLoadingTableEnabled {
        get { return HasComponent(LobbyUiComponentsLookup.MatchLoadingTableEnabled); }
        set {
            if (value != isMatchLoadingTableEnabled) {
                var index = LobbyUiComponentsLookup.MatchLoadingTableEnabled;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : matchLoadingTableEnabledComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LobbyUiMatcher {

    static Entitas.IMatcher<LobbyUiEntity> _matcherMatchLoadingTableEnabled;

    public static Entitas.IMatcher<LobbyUiEntity> MatchLoadingTableEnabled {
        get {
            if (_matcherMatchLoadingTableEnabled == null) {
                var matcher = (Entitas.Matcher<LobbyUiEntity>)Entitas.Matcher<LobbyUiEntity>.AllOf(LobbyUiComponentsLookup.MatchLoadingTableEnabled);
                matcher.componentNames = LobbyUiComponentsLookup.componentNames;
                _matcherMatchLoadingTableEnabled = matcher;
            }

            return _matcherMatchLoadingTableEnabled;
        }
    }
}
