//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LobbyUiContext {

    public LobbyUiEntity hardCurrencyEntity { get { return GetGroup(LobbyUiMatcher.HardCurrency).GetSingleEntity(); } }
    public Code.Scenes.LobbyScene.ECS.HardCurrencyComponent hardCurrency { get { return hardCurrencyEntity.hardCurrency; } }
    public bool hasHardCurrency { get { return hardCurrencyEntity != null; } }

    public LobbyUiEntity SetHardCurrency(int newValue) {
        if (hasHardCurrency) {
            throw new Entitas.EntitasException("Could not set HardCurrency!\n" + this + " already has an entity with Code.Scenes.LobbyScene.ECS.HardCurrencyComponent!",
                "You should check if the context already has a hardCurrencyEntity before setting it or use context.ReplaceHardCurrency().");
        }
        var entity = CreateEntity();
        entity.AddHardCurrency(newValue);
        return entity;
    }

    public void ReplaceHardCurrency(int newValue) {
        var entity = hardCurrencyEntity;
        if (entity == null) {
            entity = SetHardCurrency(newValue);
        } else {
            entity.ReplaceHardCurrency(newValue);
        }
    }

    public void RemoveHardCurrency() {
        hardCurrencyEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LobbyUiEntity {

    public Code.Scenes.LobbyScene.ECS.HardCurrencyComponent hardCurrency { get { return (Code.Scenes.LobbyScene.ECS.HardCurrencyComponent)GetComponent(LobbyUiComponentsLookup.HardCurrency); } }
    public bool hasHardCurrency { get { return HasComponent(LobbyUiComponentsLookup.HardCurrency); } }

    public void AddHardCurrency(int newValue) {
        var index = LobbyUiComponentsLookup.HardCurrency;
        var component = (Code.Scenes.LobbyScene.ECS.HardCurrencyComponent)CreateComponent(index, typeof(Code.Scenes.LobbyScene.ECS.HardCurrencyComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHardCurrency(int newValue) {
        var index = LobbyUiComponentsLookup.HardCurrency;
        var component = (Code.Scenes.LobbyScene.ECS.HardCurrencyComponent)CreateComponent(index, typeof(Code.Scenes.LobbyScene.ECS.HardCurrencyComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHardCurrency() {
        RemoveComponent(LobbyUiComponentsLookup.HardCurrency);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LobbyUiMatcher {

    static Entitas.IMatcher<LobbyUiEntity> _matcherHardCurrency;

    public static Entitas.IMatcher<LobbyUiEntity> HardCurrency {
        get {
            if (_matcherHardCurrency == null) {
                var matcher = (Entitas.Matcher<LobbyUiEntity>)Entitas.Matcher<LobbyUiEntity>.AllOf(LobbyUiComponentsLookup.HardCurrency);
                matcher.componentNames = LobbyUiComponentsLookup.componentNames;
                _matcherHardCurrency = matcher;
            }

            return _matcherHardCurrency;
        }
    }
}
