//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity attackEntity { get { return GetGroup(InputMatcher.Attack).GetSingleEntity(); } }
    public Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent attack { get { return attackEntity.attack; } }
    public bool hasAttack { get { return attackEntity != null; } }

    public InputEntity SetAttack(float newAngle) {
        if (hasAttack) {
            throw new Entitas.EntitasException("Could not set Attack!\n" + this + " already has an entity with Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent!",
                "You should check if the context already has a attackEntity before setting it or use context.ReplaceAttack().");
        }
        var entity = CreateEntity();
        entity.AddAttack(newAngle);
        return entity;
    }

    public void ReplaceAttack(float newAngle) {
        var entity = attackEntity;
        if (entity == null) {
            entity = SetAttack(newAngle);
        } else {
            entity.ReplaceAttack(newAngle);
        }
    }

    public void RemoveAttack() {
        attackEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent attack { get { return (Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent)GetComponent(InputComponentsLookup.Attack); } }
    public bool hasAttack { get { return HasComponent(InputComponentsLookup.Attack); } }

    public void AddAttack(float newAngle) {
        var index = InputComponentsLookup.Attack;
        var component = (Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent)CreateComponent(index, typeof(Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent));
        component.angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceAttack(float newAngle) {
        var index = InputComponentsLookup.Attack;
        var component = (Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent)CreateComponent(index, typeof(Code.Scenes.BattleScene.ECS.Components.Input.AttackComponent));
        component.angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveAttack() {
        RemoveComponent(InputComponentsLookup.Attack);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherAttack;

    public static Entitas.IMatcher<InputEntity> Attack {
        get {
            if (_matcherAttack == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.Attack);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherAttack = matcher;
            }

            return _matcherAttack;
        }
    }
}
